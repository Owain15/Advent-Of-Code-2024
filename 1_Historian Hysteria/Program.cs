
using System.Collections.Generic;

string rawData = "98415   86712\r\n21839   96206\r\n14958   40971\r\n91380   63825\r\n48482   40971\r\n47618   98239\r\n69295   72055\r\n73790   20692\r\n95008   91254\r\n30041   73739\r\n46680   55405\r\n12873   14682\r\n47722   74915\r\n81092   16759\r\n64463   31849\r\n82981   43091\r\n52948   63825\r\n86073   90988\r\n37341   87339\r\n76759   85103\r\n92565   20139\r\n70507   99102\r\n10215   32134\r\n80264   72821\r\n45235   31963\r\n41003   84233\r\n88490   76750\r\n87607   20692\r\n59690   33244\r\n76224   26934\r\n70928   58112\r\n12896   13883\r\n45046   97624\r\n14802   36874\r\n26477   90988\r\n99942   42762\r\n97700   68810\r\n31112   62593\r\n63110   73448\r\n15702   58189\r\n44444   28782\r\n56091   79236\r\n88976   38094\r\n33509   84823\r\n55932   52315\r\n37002   55140\r\n49031   69737\r\n62442   84713\r\n91598   28894\r\n96109   43306\r\n10029   65760\r\n81145   78422\r\n57749   88707\r\n30352   38306\r\n58767   84823\r\n65644   83417\r\n14392   60859\r\n38548   23806\r\n45420   84823\r\n86410   24207\r\n86074   38732\r\n34418   40971\r\n69259   84823\r\n76444   61427\r\n52200   60859\r\n80383   46070\r\n24950   29096\r\n92504   56091\r\n63952   37106\r\n21571   67919\r\n30674   98750\r\n73909   62113\r\n51915   81880\r\n58884   64362\r\n35784   90988\r\n77693   46396\r\n43415   40971\r\n17619   43889\r\n61513   58139\r\n86035   43930\r\n79559   90195\r\n74180   41607\r\n62739   98079\r\n53632   57293\r\n21594   96012\r\n56752   20348\r\n49825   90988\r\n27016   54248\r\n79239   60318\r\n79102   46726\r\n15178   47103\r\n69131   73658\r\n77863   72055\r\n57745   74229\r\n75083   30406\r\n30789   88659\r\n59510   68773\r\n37256   87339\r\n89551   24882\r\n24912   11151\r\n65718   87339\r\n18607   72055\r\n89744   34103\r\n13502   63777\r\n74252   93822\r\n26823   88948\r\n12926   20361\r\n57362   37728\r\n42529   72897\r\n55701   90106\r\n80515   90673\r\n53130   98750\r\n11755   39123\r\n15567   16982\r\n45347   73739\r\n56219   84823\r\n80487   63515\r\n57918   85690\r\n24138   78136\r\n89383   68948\r\n33043   72055\r\n74588   28108\r\n83590   64739\r\n71034   65419\r\n75815   23490\r\n20112   76750\r\n14438   82344\r\n10441   40971\r\n73704   18644\r\n73739   51191\r\n17858   91254\r\n45052   90988\r\n71745   63825\r\n61105   71049\r\n69625   64414\r\n72147   79179\r\n39613   42434\r\n49486   16939\r\n37159   88707\r\n81789   21633\r\n43834   31963\r\n96281   51697\r\n67908   31849\r\n25034   44271\r\n65569   75978\r\n58832   33079\r\n73347   31849\r\n77421   84823\r\n11586   91254\r\n67679   36415\r\n39964   22528\r\n37638   61931\r\n26753   90315\r\n90409   39489\r\n55746   76750\r\n44727   95445\r\n90778   60859\r\n32071   78505\r\n60089   50682\r\n32309   11406\r\n19358   80132\r\n48376   87339\r\n45291   47907\r\n56391   84233\r\n76798   48120\r\n78422   60859\r\n58146   21303\r\n53529   63825\r\n98604   91254\r\n34637   49452\r\n94181   39489\r\n27144   99118\r\n49195   80934\r\n98493   70617\r\n78396   98075\r\n59508   31032\r\n14533   87339\r\n65929   90988\r\n12476   17041\r\n18406   31963\r\n84233   66617\r\n12813   20863\r\n87866   98750\r\n92020   16503\r\n86199   29241\r\n14865   64023\r\n77251   18843\r\n29087   16712\r\n89093   67919\r\n84823   52315\r\n97124   63689\r\n21993   38094\r\n52548   98181\r\n64426   38094\r\n39508   81972\r\n88707   37155\r\n77577   41917\r\n69880   57192\r\n44717   79597\r\n60859   67919\r\n12172   39516\r\n52315   77348\r\n34818   40971\r\n68237   47371\r\n90048   31492\r\n91780   91254\r\n83184   65480\r\n47595   13030\r\n93135   39092\r\n90044   52315\r\n57788   93726\r\n62763   23239\r\n89761   38094\r\n10716   98750\r\n35248   55737\r\n59494   68055\r\n16810   67131\r\n88942   31963\r\n76030   59024\r\n68413   56574\r\n71633   40971\r\n27617   46689\r\n61233   48940\r\n13658   34496\r\n40703   65209\r\n28669   83621\r\n70132   52315\r\n37900   46800\r\n36084   12920\r\n70378   60859\r\n82602   86916\r\n38476   25624\r\n11688   52315\r\n63095   73739\r\n83433   37370\r\n66582   31849\r\n44408   68006\r\n91580   13383\r\n41394   18554\r\n15054   21090\r\n83901   91254\r\n68378   12571\r\n70868   72055\r\n25682   99471\r\n80283   84823\r\n58774   91254\r\n15043   44002\r\n62670   73739\r\n55915   52315\r\n34285   50248\r\n45860   50682\r\n26145   82948\r\n44170   74880\r\n69068   84270\r\n38169   38094\r\n15020   21645\r\n48351   46795\r\n52242   17322\r\n57262   46257\r\n45360   52054\r\n57518   87339\r\n12487   63515\r\n13358   15895\r\n38204   73180\r\n37940   94820\r\n75950   97855\r\n98789   72251\r\n55604   92176\r\n39930   61056\r\n84928   39489\r\n93961   90584\r\n85987   87014\r\n27022   40307\r\n77327   63825\r\n57151   31963\r\n86379   82871\r\n37155   88222\r\n44284   84823\r\n34832   96979\r\n85214   69001\r\n88783   27436\r\n12782   31963\r\n70752   80954\r\n97651   23189\r\n46554   46907\r\n43866   38094\r\n60090   58763\r\n89564   22691\r\n11558   52445\r\n61150   58975\r\n11230   29247\r\n46103   98325\r\n31204   44018\r\n44420   71528\r\n33659   10730\r\n30098   69230\r\n77473   98410\r\n67198   63825\r\n91560   90988\r\n17842   18473\r\n31031   10138\r\n25221   60859\r\n62150   66417\r\n14373   91254\r\n33995   70555\r\n32172   57970\r\n36488   94041\r\n95747   56450\r\n61567   90066\r\n74271   80136\r\n51290   96535\r\n27995   31963\r\n63515   87339\r\n72055   18311\r\n22226   63515\r\n59375   81818\r\n76512   49521\r\n85812   78856\r\n27537   78736\r\n87666   32193\r\n27624   12413\r\n64096   61750\r\n10749   20692\r\n27436   52315\r\n75435   50309\r\n86558   60859\r\n25138   18662\r\n41356   60859\r\n68760   72055\r\n45574   25507\r\n21577   98942\r\n31881   81870\r\n65016   73739\r\n90656   32647\r\n24122   87339\r\n78458   60859\r\n99290   42530\r\n63362   74484\r\n45324   74474\r\n55742   48062\r\n46944   44844\r\n71534   20692\r\n38348   53179\r\n90391   31963\r\n63186   72873\r\n43435   52315\r\n96716   32259\r\n99923   55737\r\n90098   70281\r\n14525   93644\r\n14634   38094\r\n15853   78345\r\n33108   33722\r\n83439   51275\r\n93742   60859\r\n68758   90988\r\n34771   17456\r\n29473   47384\r\n27697   39570\r\n29944   50455\r\n50249   32302\r\n89444   99416\r\n30805   90988\r\n94132   61365\r\n98750   31849\r\n83186   76750\r\n52252   65184\r\n89753   72055\r\n98197   98697\r\n76750   72055\r\n21126   67274\r\n21641   34760\r\n62076   33495\r\n14579   64696\r\n22715   81980\r\n90163   12406\r\n95784   68047\r\n85724   87339\r\n41620   10409\r\n92753   76750\r\n37666   91254\r\n38137   46672\r\n47110   60859\r\n54543   23101\r\n26495   51493\r\n43159   27360\r\n61846   39431\r\n83787   84233\r\n13506   20222\r\n60298   31345\r\n21742   73739\r\n91928   76750\r\n67392   27089\r\n59447   88657\r\n10147   52315\r\n88420   63825\r\n84317   67919\r\n18279   84823\r\n15984   90756\r\n83897   38094\r\n17524   90988\r\n26017   45126\r\n98635   20112\r\n82243   27089\r\n26750   26406\r\n69469   77146\r\n89732   11124\r\n41258   17720\r\n48062   78300\r\n68561   13517\r\n34283   85667\r\n97835   43741\r\n21351   67919\r\n32372   16720\r\n14088   38936\r\n89173   10152\r\n69129   43769\r\n46965   73739\r\n47834   91233\r\n17627   19189\r\n12268   67826\r\n37356   52315\r\n68366   63825\r\n50838   29430\r\n94974   62978\r\n65427   92335\r\n78704   92785\r\n98194   31849\r\n94860   91254\r\n10413   52315\r\n99435   76750\r\n16749   73328\r\n43068   16548\r\n18135   40488\r\n58421   12600\r\n37910   92811\r\n28769   34293\r\n95334   30803\r\n67748   59225\r\n44365   31963\r\n29273   20692\r\n46370   60859\r\n47709   63912\r\n63775   84823\r\n75548   28296\r\n33798   38094\r\n69672   89607\r\n74754   73739\r\n49066   30017\r\n89756   52315\r\n67919   43998\r\n88061   68521\r\n39137   50152\r\n59338   49890\r\n44756   90707\r\n98359   36495\r\n10113   80721\r\n96163   13016\r\n18965   30702\r\n95671   81809\r\n78007   93680\r\n72250   92806\r\n24831   48062\r\n93561   25138\r\n73962   87667\r\n90248   48062\r\n95762   63442\r\n96852   50225\r\n36995   31227\r\n87401   91254\r\n30838   84649\r\n11224   48062\r\n79061   50682\r\n83824   20112\r\n61242   75132\r\n97196   31849\r\n31927   48062\r\n22087   72055\r\n64178   33632\r\n92080   70089\r\n84339   28433\r\n57804   76750\r\n25387   37155\r\n81722   84823\r\n86463   63825\r\n26959   84233\r\n74918   36995\r\n47554   71702\r\n51450   77114\r\n15753   64312\r\n79468   83563\r\n60172   63825\r\n89187   66416\r\n47552   84233\r\n63836   96955\r\n50736   60859\r\n46257   33617\r\n27477   63628\r\n94159   73739\r\n26339   27964\r\n99674   93217\r\n61250   23628\r\n94382   64265\r\n11539   50180\r\n10492   62057\r\n15414   82089\r\n81830   76750\r\n79729   32501\r\n59935   78410\r\n55737   91254\r\n33501   31849\r\n98398   50682\r\n97275   76602\r\n38887   86626\r\n48245   15889\r\n67814   41213\r\n28276   96218\r\n52995   25138\r\n51768   84823\r\n23366   67919\r\n58043   94722\r\n33655   56522\r\n50043   72450\r\n73839   90440\r\n10752   63825\r\n15750   19911\r\n99509   60996\r\n12456   87339\r\n20727   90988\r\n62359   40971\r\n81671   64213\r\n91541   35482\r\n94485   50682\r\n67680   37155\r\n63058   32117\r\n50090   98750\r\n61000   60859\r\n11341   81637\r\n10675   70533\r\n22159   99742\r\n99705   32116\r\n32085   78422\r\n56367   18049\r\n78611   64924\r\n90242   50682\r\n61570   68777\r\n98193   79855\r\n63068   73739\r\n53915   13627\r\n92664   33858\r\n82118   62671\r\n23234   31957\r\n94674   39489\r\n32450   55737\r\n59276   99636\r\n39738   42163\r\n42659   31849\r\n29950   38094\r\n17039   96134\r\n31374   52568\r\n13625   72109\r\n33042   27336\r\n84607   97422\r\n31849   20692\r\n17061   20500\r\n12380   20692\r\n55834   76750\r\n40260   40971\r\n58188   99023\r\n45619   90988\r\n46734   72495\r\n25567   37155\r\n27593   36939\r\n27705   27436\r\n35918   53049\r\n72395   22908\r\n83024   25138\r\n59905   50682\r\n29942   51044\r\n23864   79568\r\n55150   40971\r\n39901   73739\r\n51429   84499\r\n26667   56600\r\n20692   49999\r\n44423   48413\r\n89639   90988\r\n62449   23693\r\n82368   68603\r\n37998   60859\r\n91308   84355\r\n47625   84233\r\n87235   48062\r\n10479   40971\r\n12470   77812\r\n79398   92110\r\n24157   35490\r\n84322   84823\r\n44438   27300\r\n46201   37155\r\n15815   44116\r\n52626   38094\r\n15858   46133\r\n89797   98911\r\n76844   17965\r\n36493   81353\r\n68425   84823\r\n22137   60859\r\n77167   33379\r\n87697   19256\r\n41603   27345\r\n93230   87339\r\n34535   39068\r\n62368   31963\r\n71318   34890\r\n14566   52315\r\n90439   45351\r\n87013   50682\r\n85339   92917\r\n91534   63322\r\n90988   31849\r\n37108   89248\r\n25398   15630\r\n60269   46354\r\n73929   31963\r\n85753   89789\r\n13055   76464\r\n79991   88707\r\n63825   91254\r\n98473   56091\r\n64938   57251\r\n38094   38881\r\n50465   22038\r\n73037   10811\r\n75967   49581\r\n68942   84233\r\n71786   76750\r\n99611   50682\r\n17590   35221\r\n87318   16184\r\n38505   36185\r\n19563   71760\r\n91493   59209\r\n75286   91254\r\n54534   45259\r\n70281   24482\r\n30770   52315\r\n84275   55737\r\n64420   41263\r\n67601   56131\r\n16784   14971\r\n46723   71705\r\n49609   33279\r\n10952   52768\r\n40729   44124\r\n90745   77061\r\n34124   87339\r\n79459   19662\r\n59660   88336\r\n33724   76750\r\n41878   31471\r\n29912   36995\r\n21386   84233\r\n32945   87339\r\n39159   86983\r\n81459   50051\r\n63810   76750\r\n27827   72336\r\n75116   76750\r\n70438   85513\r\n63535   37155\r\n55684   39489\r\n96958   95080\r\n62793   40971\r\n48649   37155\r\n73108   38479\r\n12038   73035\r\n49718   94369\r\n49882   21814\r\n90650   34851\r\n11116   61714\r\n79917   51077\r\n62707   55628\r\n92459   96915\r\n95690   53399\r\n24211   27436\r\n87266   91254\r\n15847   12424\r\n17896   54529\r\n53974   84823\r\n92698   72470\r\n40973   38630\r\n24809   20692\r\n71610   59555\r\n67213   88707\r\n42767   79241\r\n96580   42503\r\n79226   82565\r\n12051   34910\r\n14600   90988\r\n70962   48062\r\n72321   73739\r\n66896   77565\r\n55308   60714\r\n32305   40971\r\n15705   60028\r\n20331   48062\r\n90356   91254\r\n27446   21289\r\n32691   31849\r\n88785   48062\r\n51419   28561\r\n44311   79505\r\n95234   57870\r\n12935   40971\r\n62198   91752\r\n26331   82576\r\n63091   91254\r\n28603   82261\r\n40147   67117\r\n83978   77859\r\n19279   56339\r\n30511   77718\r\n19793   87363\r\n67630   67919\r\n85108   17324\r\n37977   15731\r\n58983   49370\r\n68423   35881\r\n10224   74695\r\n41736   40884\r\n13590   91254\r\n23362   40971\r\n99499   65408\r\n16460   73297\r\n35426   69103\r\n14873   10331\r\n80614   98750\r\n27859   86699\r\n94072   52315\r\n18981   27436\r\n51030   63825\r\n31979   31974\r\n10060   49581\r\n97457   59642\r\n31057   52315\r\n98560   84823\r\n47286   38094\r\n35565   40971\r\n42285   54785\r\n81392   82713\r\n22878   48062\r\n34487   65138\r\n24156   93846\r\n57704   49888\r\n51352   33050\r\n73714   50682\r\n73960   47692\r\n14686   25215\r\n38555   40971\r\n92632   61868\r\n12529   48062\r\n48406   66247\r\n44504   70356\r\n78562   84823\r\n21381   89200\r\n93855   56801\r\n45470   48023\r\n13650   59647\r\n82960   46206\r\n40965   72192\r\n31963   45048\r\n48040   67919\r\n53457   76750\r\n47995   38468\r\n56904   73507\r\n53710   74022\r\n99557   67919\r\n52346   87339\r\n22009   31849\r\n10126   20692\r\n96604   46257\r\n76629   49581\r\n87339   22783\r\n53577   32708\r\n93143   24815\r\n95929   82359\r\n41268   76312\r\n28360   50433\r\n18926   20246\r\n44735   55737\r\n21754   94200\r\n45995   20692\r\n91603   57841\r\n69767   82262\r\n37282   80348\r\n17730   76897\r\n19647   24004\r\n97462   76346\r\n71047   62037\r\n34121   72977\r\n49581   84188\r\n92169   33396\r\n14641   72055\r\n39489   56331\r\n64286   36007\r\n66660   55737\r\n61013   57502\r\n93637   89277\r\n79890   46257\r\n36204   69809\r\n87899   98750\r\n90417   60859\r\n66456   67919\r\n31910   50411\r\n95024   24713\r\n53501   97080\r\n47761   52315\r\n91582   45390\r\n35753   93253\r\n20424   98133\r\n52448   67528\r\n39925   38895\r\n28344   21734\r\n54088   88707\r\n40684   79586\r\n63495   39489\r\n42745   46257\r\n36411   20692\r\n24189   73700\r\n63663   55737\r\n51325   97464\r\n35638   57921\r\n16147   97192\r\n65808   26709\r\n93854   21334\r\n83029   98750\r\n85681   31849\r\n85513   20692\r\n48163   33364\r\n64824   70813\r\n80330   59638\r\n68279   56091\r\n63850   98633\r\n64014   31963\r\n39492   91576\r\n24595   82232\r\n53478   67388\r\n33189   72055\r\n79380   84119\r\n74284   54996\r\n70140   69650\r\n86881   87339\r\n66639   98974\r\n67556   62236\r\n85378   37807\r\n93552   11734\r\n77734   87339\r\n84788   63515\r\n25658   73739\r\n50845   42313\r\n39182   24860\r\n39825   50682\r\n50295   63515\r\n66539   21906\r\n31197   73739\r\n40971   31849\r\n12253   54780\r\n89300   49136\r\n64819   18235\r\n38111   67613\r\n29614   71066\r\n94658   79493\r\n35651   13233\r\n34949   41218\r\n41470   40932\r\n56805   58595\r\n97958   27436\r\n41542   43810\r\n98116   87339\r\n95005   64201\r\n26689   73039\r\n87929   72055\r\n48643   65869\r\n44264   80510\r\n42574   36244\r\n63706   36541\r\n10516   20692\r\n81888   48062\r\n46840   49581\r\n88271   62250\r\n94269   13433\r\n72975   51346\r\n40378   31963\r\n85436   67919\r\n98412   31849\r\n16302   25890\r\n92817   76750\r\n73558   95672\r\n61378   27919\r\n19104   34857\r\n86385   27774\r\n18893   20421\r\n62394   27466\r\n97168   78422\r\n76828   20692\r\n57785   11439\r\n69161   84823\r\n81891   88707\r\n14398   50682\r\n75597   84233\r\n40237   74679\r\n74627   72055\r\n68878   44137\r\n64971   55565\r\n83067   91254\r\n77491   79186\r\n88686   15795\r\n57603   13448\r\n45266   68597\r\n33706   36802\r\n26544   90988\r\n80230   41517\r\n98279   37155\r\n75578   87339\r\n78560   90689\r\n53825   69683\r\n46223   35266\r\n50699   31963\r\n11507   30160\r\n98508   73739\r\n85131   90605\r\n51806   78874\r\n66216   29974\r\n55896   72055\r\n87983   45827\r\n37421   24722\r\n27089   72055\r\n35796   31849\r\n50647   46257\r\n18865   87578\r\n95580   48404\r\n95447   60859\r\n57831   29451\r\n74714   36995\r\n81845   11460\r\n42033   66983\r\n77846   87339\r\n68670   86138\r\n48821   50682\r\n58352   37624\r\n76352   73739\r\n27924   45322\r\n14974   58194\r\n19887   19109\r\n23329   85568\r\n20214   61048\r\n36738   48062\r\n64224   63825\r\n56209   40971\r\n63592   90988\r\n96560   76137\r\n73748   48062\r\n90647   86904\r\n10910   88920\r\n85440   41920\r\n33264   90988\r\n76674   75533\r\n54141   16463\r\n68367   86319\r\n46421   73739\r\n71740   26423\r\n84766   10695\r\n83450   14876\r\n59985   31963\r\n77991   60859\r\n91254   84233\r\n70747   31849\r\n39254   26780\r\n16062   25138\r\n78945   65871\r\n50682   27436\r\n65403   91254\r\n95579   60732\r\n21033   29762\r\n29307   58721\r\n69595   98750\r\n40807   84823\r\n19522   93019\r\n90505   40971\r\n53911   90998\r\n52411   91271\r\n75197   48589\r\n90568   48062\r\n86892   84823\r\n15662   62119\r\n60408   73739\r\n61681   46257\r\n81491   31034\r\n83205   39489";

List<string> data = new List<string>();

List<int> column1 = new List<int>();

List<int> column2 = new List<int>();

List<int> differenceList = new List<int>();

int result;

//Split raw data into a list of strings.

rawData = rawData.Replace("\r\n","   ");

data = rawData.Split("  ").ToList();

//Devide data into 2 lists<int>

int splitValue = 0;
for (int i = data.Count-1; i > -1; i--)
{
	int selection = Int32.Parse(data[i]);
	
	if(splitValue == 0) {column2.Add(selection); }
	else {  column1.Add(selection); }
	
	splitValue++;
	if(splitValue > 1) { splitValue = 0; }
}

//put both lists into assending order

//column1.Order();
//column2.Order();

column1.Sort();
column2.Sort();

//calculate the diffence between columns 

for (int i = 0; i < column1.Count; i++)
{
	int difference;
	if (column1[i] > column2[i]) { difference = column1[i] - column2[i]; }
	else { difference = column2[i] - column1[i]; }
	if (difference < 0) { Console.WriteLine("Difference out of bounds"); }
	else { differenceList.Add(difference); }
}

// add up differnces to find result

result = 0;

for (int i = 0; i <= differenceList.Count-1; i++)
{ result = result + differenceList[i]; }

//Readouts

Console.WriteLine("---------------------------------------------\r\n  Part One\r\n---------------------------------------------\r\n\r\n");
//Console.WriteLine(rawData);
Console.WriteLine("data count: "+data.Count);
Console.WriteLine("column 1: "+column1.Count);
Console.WriteLine("column 2: "+column2.Count);
Console.WriteLine("difernce count: " + differenceList.Count);
Console.WriteLine("result: " + result);

//for (int i = 0; i < column1.Count; i++)
//{
//	Console.WriteLine(column1[i]);
//}

//for (int i = 0; i < column2.Count; i++)
//{
//	Console.WriteLine(column2[i]);
//}

// part one notes

// 28974684 ... to high.

// swap list.Order to List.Sort

// 2192892 Right anser.






// Part 2



//// test start

List<int> test1 = new List<int>() { 3, 4, 2, 1, 3, 3 };
List<int> test2 = new List<int>() { 4, 3, 5, 3, 9, 3 };
List<int> test3 = new List<int>();


int testResult = 0;

test2.Sort();

for (int i = 0;i < test1.Count;i++)
{
	int dCount = 0;

	for (int j = 0;j < test2.Count;j++)
	{
		if(test1[i] == test2[j])
			{ dCount++; }
	}
	test3.Add(dCount);
}

for(int i  = 0;i < test1.Count;i++)
{
	
	test3[i] = test1[i] * test3[i];
}

foreach (int i in test3)
{ testResult = testResult + i; }

//// test end

List<int> duplicationCount = new List<int>();
int similarityScore = 0;

for (int i = 0; i < column1.Count; i++)
{
	int dCount = 0;

	for (int j = 0; j < column2.Count; j++)
	{
		if (column1[i] == column2[j])
		{ dCount++; }
	}
	duplicationCount.Add(dCount);
}

for (int i = 0; i < column1.Count; i++)
{

	duplicationCount[i] = column1[i] * duplicationCount[i];
}

foreach (int i in duplicationCount)
{ similarityScore = similarityScore + i; }

//// for each item in column1 count duplicuts in column2 put result into duplictCount

//for( int i = 0; i < column1.Count; i++)
//{
//	int duplicuts = 0;

//	for (int j = 0; j < column2.Count; j++)
//	{
//		if(column1[i] == column2[j])
//		{  duplicuts++; }
//	}

//	duplicationCount.Add(duplicuts);
//}


////Calculate a total similarity score by adding up each number in the left list after
////multiplying it by the number of times that number appears in the right list

//similarityScore = 0;

//for (int i = 0;i <= duplicationCount.Count-1;i++)
//{
//	similarityScore = similarityScore + (column1[i]*duplicationCount[i]);
//}


//Readouts

Console.WriteLine("\r\n\r\n---------------------------------------------\r\n  Part Two\r\n---------------------------------------------\r\n");

Console.WriteLine("run test;\r\nexpected result: 31 (9 + 4 + 0 + 0 + 9 + 9)");
Console.WriteLine($"    test result: {testResult} ({test3[0]} + {test3[1]} + {test3[2]} + {test3[3]} + {test3[4]} + {test3[5]})");

Console.WriteLine("\r\n---------------------------------------------\r\n---------------------------------------------\r\n");

Console.WriteLine("run program\r\n");
Console.WriteLine("duplicationCount: " + duplicationCount.Count);
Console.WriteLine("Similarity Score: " + similarityScore);

// part two notes


// 2192892 anser to low.
// run test, Rewight program
// 22962826 arnser correct.

